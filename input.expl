class
LinkedList{
decl
	int key;
	LinkedList next;
	int init(int key);
	int getkey();
	int insert(int key);
	int del();
	int printrev();
enddecl
	int init(int key){
		begin
			self.key=key;
			self.next=null;
			return 1;
		end
	}

	int getkey(){
		begin
			return self.key;
		end
	}

	int insert(int key){
		decl
			int temp;
		enddecl
		begin
			if(self.next==null) then
				self.next=new(LinkedList);
				temp=self.next.init(key);
			else
				temp=self.next.insert(key);
			endif;
			return 1;
		end
	}

	int del(){
		decl
			int temp;
		enddecl
		begin
			if(self.key!=0) then
				if(self.next.getkey()==0) then
					self.next=null;
				else
					temp=self.next.del();
				endif;
			endif;
			return 1;
		end
	}

	int printrev(){
		decl
			int temp;
		enddecl
		begin
			if(self.next==null) then
				write(self.key);
			else
				temp=self.next.printrev();
				write(self.key);
			endif;
			return 1;
		end
	}
}

DoubleLinkedList extends LinkedList{
decl
	LinkedList prev;
	int init(int key);
	int printrev();
enddecl
	int init(int key){
		begin
			self.key=key;
			self.next=null;
			self.prev=null;
			return 1;
		end
	}

	int printrev(){
		decl
			int temp;
		enddecl
		begin
			if(self.next==null) then
				write(self.key);
			else
				temp=self.next.printrev();
				write(self.key);
			endif;
			return 1;
		end
	}
}
endclass

decl
	LinkedList Lhead;
	DoubleLinkedList Dhead;
enddecl

int main(){
decl
	int val, temp, n;
enddecl
begin
	val=initialize();
	Lhead=new(LinkedList);
	read(n);
	temp=Lhead.init(n);
	while(n!=0) do
		read(n);
		temp=Lhead.insert(n);
	endwhile;
	temp=Lhead.del();
	temp=Lhead.printrev();
	Dhead=Lhead;
	temp=Dhead.printrev();
	return 1;
end
}
