type
  bst{
  int a;
  bst left;
  bst right;
  }
endtype

decl
  int in,opt;
  bst insert(bst h, int key);
  int inOrder(bst h); 
  int preOrder(bst h);
  int postOrder(bst h);           
enddecl

bst insert(bst h, int key)
{
  decl
  enddecl
  begin
	h=alloc();

    return h;
  end
}

int inOrder(bst h){
  decl
  enddecl
  begin
    
  return 0;
  end
}

int preOrder(bst h){
  decl
  enddecl
  begin
        return 1;
  end
}

int postOrder(bst h){
  decl
  enddecl
  begin
  return 1;
  end
}

int main()
{ 
  decl
  int val,flag;
  bst Root;
  enddecl

  begin
    val = initialize();
    Root = null;

    read(val);

    while(val!=0) do
      Root = insert(Root,val);
      read(val);
    endwhile;

  
  return 9;
  end
}
